package item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PostItemsHandlerFunc turns a function with the right signature into a post items handler
type PostItemsHandlerFunc func(PostItemsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostItemsHandlerFunc) Handle(params PostItemsParams) middleware.Responder {
	return fn(params)
}

// PostItemsHandler interface for that can handle valid post items params
type PostItemsHandler interface {
	Handle(PostItemsParams) middleware.Responder
}

// NewPostItems creates a new http.Handler for the post items operation
func NewPostItems(ctx *middleware.Context, handler PostItemsHandler) *PostItems {
	return &PostItems{Context: ctx, Handler: handler}
}

/*PostItems swagger:route POST /items Item postItems

装備情報を追加

装備情報を新たに追加する


*/
type PostItems struct {
	Context *middleware.Context
	Handler PostItemsHandler
}

func (o *PostItems) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPostItemsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

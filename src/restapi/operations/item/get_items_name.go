package item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetItemsNameHandlerFunc turns a function with the right signature into a get items name handler
type GetItemsNameHandlerFunc func(GetItemsNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetItemsNameHandlerFunc) Handle(params GetItemsNameParams) middleware.Responder {
	return fn(params)
}

// GetItemsNameHandler interface for that can handle valid get items name params
type GetItemsNameHandler interface {
	Handle(GetItemsNameParams) middleware.Responder
}

// NewGetItemsName creates a new http.Handler for the get items name operation
func NewGetItemsName(ctx *middleware.Context, handler GetItemsNameHandler) *GetItemsName {
	return &GetItemsName{Context: ctx, Handler: handler}
}

/*GetItemsName swagger:route GET /items/{name} Item getItemsName

指定した名前の装備情報を取得

名前を指定して装備情報を取得する


*/
type GetItemsName struct {
	Context *middleware.Context
	Handler GetItemsNameHandler
}

func (o *GetItemsName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetItemsNameParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

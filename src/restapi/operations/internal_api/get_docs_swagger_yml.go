package internal_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetDocsSwaggerYmlHandlerFunc turns a function with the right signature into a get docs swagger yml handler
type GetDocsSwaggerYmlHandlerFunc func(GetDocsSwaggerYmlParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetDocsSwaggerYmlHandlerFunc) Handle(params GetDocsSwaggerYmlParams) middleware.Responder {
	return fn(params)
}

// GetDocsSwaggerYmlHandler interface for that can handle valid get docs swagger yml params
type GetDocsSwaggerYmlHandler interface {
	Handle(GetDocsSwaggerYmlParams) middleware.Responder
}

// NewGetDocsSwaggerYml creates a new http.Handler for the get docs swagger yml operation
func NewGetDocsSwaggerYml(ctx *middleware.Context, handler GetDocsSwaggerYmlHandler) *GetDocsSwaggerYml {
	return &GetDocsSwaggerYml{Context: ctx, Handler: handler}
}

/*GetDocsSwaggerYml swagger:route GET /docs/swagger.yml InternalAPI getDocsSwaggerYml

Swaggerによるスキーマを取得する(YAML)


*/
type GetDocsSwaggerYml struct {
	Context *middleware.Context
	Handler GetDocsSwaggerYmlHandler
}

func (o *GetDocsSwaggerYml) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetDocsSwaggerYmlParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
